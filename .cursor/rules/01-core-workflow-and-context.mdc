---
description: 
globs: 
alwaysApply: true
---
---
Rule Type: Always
Description: Core operational workflow, mandatory context analysis from Memory Bank, and commit checking protocol for the CarePoP/QueerCare project.
Globs:
AlwaysApply: true
---

# Core Workflow & Context Protocol (CarePoP)

## Mandatory Pre-computation Step
- Read & Synthesize ALL 9 Core Memory Bank Files: Comprehensively read and integrate information from `projectbrief.md`, `productContext.md`, `systemPatterns.md`, `techContext.md`, `epics_and_tickets.md`, `tracker.md`, `memorylog.md`, `activeContext.md`, and `progress.md`. This is **REQUIRED** for accurate context.

## Standard Operational Loop
- Analyze Request vs. Memory Bank Context: Use synthesized context to understand the request. Ground analysis in Memory Bank files. Identify relevant tickets/status (`epics_and_tickets.md`, `tracker.md`). Note focus from `activeContext.md`.
- Plan Action & Strategy: Formulate plan based on analysis. Apply security, compliance, architecture, quality rules (see other rule files). Prioritize based on `activeContext.md` / `tracker.md`. State key assumptions.
- Present Plan/Ask User: Clearly present proposed plan/step/clarification. Request explicit user confirmation or direction.
- Implement Approved Action: Execute user-approved task. Adhere strictly to project patterns (`systemPatterns.md`), tech stack (`techContext.md`), ticket ACs (`epics_and_tickets.md`).
- Verify Output & User Satisfaction: Present result. Ask for user feedback and confirmation. Iterate if needed based on feedback *and* Memory Bank context. 
- Reflect on the outcome of implementation.
- Update Memory Bank (MUST Update Specific Files): Upon user confirmation: Update `tracker.md` (status/notes), `activeContext.md` (focus/next step), `progress.md` (summary), `memorylog.md` (significant decisions only). Update other core files *only* if user explicitly changes plan/context.
- Assess Commit Point: Evaluate if a logical unit of work (per `epics_and_tickets.md`) is complete for a conceptual commit.
- Propose Commit & Act on User Response: If commit point reached, ask user if they agree to conceptually finalize. Proceed based on explicit response. Log check/response in `memorylog.md`.

- Await Next Instruction: Indicate readiness for the next task.