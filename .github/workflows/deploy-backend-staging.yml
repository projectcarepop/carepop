name: Deploy Backend to Cloud Run (Staging)

on:
  push:
    branches:
      - main # Trigger deployment only on pushes to the main branch
    paths:
      - 'carepop-backend/**' # Trigger only if backend code changes
      - '.github/workflows/deploy-backend-staging.yml' # Trigger if workflow itself changes

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: asia-southeast1 # GCP region for Artifact Registry & Cloud Run
  GAR_REPOSITORY: carepop-images # Artifact Registry repository name
  SERVICE_NAME: carepop-backend-staging # Cloud Run service name
  # Construct the image name using the environment variables
  IMAGE_NAME: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.SERVICE_NAME }}

jobs:
  build-and-deploy:
    name: Build and Deploy Backend
    runs-on: ubuntu-latest

    # Grant permissions for Workload Identity Federation
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Google Artifact Registry
      # Use the gcloud credential helper configured by the auth action
      run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./carepop-backend # Path to the Dockerfile directory
        push: true
        tags: ${{ env.IMAGE_NAME }}:${{ github.sha }} # Tag image with commit SHA
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE_NAME }}
        region: ${{ env.GAR_LOCATION }}
        # Deploy the image tagged with the specific commit SHA
        image: ${{ env.IMAGE_NAME }}:${{ github.sha }}
        # Optional: Set environment variables for the Cloud Run service if needed
        # env_vars: |
        #   EXAMPLE_VAR=example_value

    # If you want to tag the deployed revision in Cloud Run with the git commit SHA
    # This requires granting the Cloud Run Service Agent role to the deployer SA
    # - name: Tag Cloud Run revision
    #   run: |-
    #     gcloud run services update-traffic ${{ env.SERVICE_NAME }} \
    #       --region=${{ env.GAR_LOCATION }} \
    #       --update-tags=git-commit-sha=${{ github.sha }}=100

    - name: Output Cloud Run service URL
      run: |
        echo "Cloud Run service URL: ${{ steps.deploy.outputs.url }}" 