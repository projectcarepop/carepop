-- Supabase Migration: Seed Comprehensive and More Realistic Mock Provider Data
-- This script adds mock providers with more varied names and randomized schedules.
-- It ensures each clinic has at least one provider for each service category it offers,
-- using real clinic IDs and service categories derived from provided CSV and SQL data.

BEGIN;

-- Data sources reminder (from previous generation):
-- 1. services_rows.csv for service IDs and categories.
-- 2. User-provided SQL for clinic_services table (mapping clinics to service IDs).
-- 3. Target Clinic IDs:
--    '07da576b-b679-4c35-955f-a2e8b6a6dd21' (Tondo)
--    '36184414-d194-4c70-81e3-6f2d50380985' (Cubao)
--    'e33f7836-c4ad-44be-8c11-a860e6cf6452' (Tandang Sora)

-- Placeholder UUIDs will be generated by the script execution within Supabase or manually replaced if needed.
-- The script focuses on providing diverse data that can be copied into Supabase SQL editor.

-- Helper to generate a somewhat random schedule part
-- For actual random generation, a plpgsql function would be better, 
-- but for a one-off seed, we'll just vary a few examples manually in the generated output below.

-- 0. Ensure all required specialties exist in public.specialties
--    Using INSERT ... ON CONFLICT DO NOTHING to avoid errors if they already exist.
INSERT INTO public.specialties (name, description, is_active) VALUES
('Family Planning', 'Services related to family planning and contraception.', TRUE),
('Maternal Health', 'Care for mothers during pregnancy, childbirth, and postnatal period.', TRUE),
('Child Health', 'Healthcare services for infants, children, and adolescents.', TRUE),
('Medical', 'General medical consultations and primary care.', TRUE),
('Reproductive Health', 'Services related to reproductive system health and functions.', TRUE),
('Dental', 'Dental care and oral health services.', TRUE),
('Laboratory', 'Laboratory testing and diagnostic services.', TRUE)
ON CONFLICT (name) DO NOTHING;

-- 1. Mock Providers (without direct specialty, bio, or profile_image_url column)
INSERT INTO public.providers (id, first_name, last_name, is_active, created_at, updated_at) VALUES
-- Tondo Clinic Providers
('a1a1a1a1-0001-4001-8001-000000000001', 'Maria', 'Santos', TRUE, NOW(), NOW()),
('a1a1a1a1-0002-4002-8002-000000000002', 'Juan', 'Dela Cruz', TRUE, NOW(), NOW()),
('a1a1a1a1-0003-4003-8003-000000000003', 'Lina', 'Garcia', TRUE, NOW(), NOW()),
('a1a1a1a1-0004-4004-8004-000000000004', 'Roberto', 'Reyes', TRUE, NOW(), NOW()),

-- Cubao Clinic Providers
('b2b2b2b2-0001-4001-8001-000000000001', 'Sofia', 'Lim', TRUE, NOW(), NOW()),
('b2b2b2b2-0002-4002-8002-000000000002', 'David', 'Chen', TRUE, NOW(), NOW()),
('b2b2b2b2-0003-4003-8003-000000000003', 'Isabelle', 'Tan', TRUE, NOW(), NOW()),
('b2b2b2b2-0004-4004-8004-000000000004', 'Miguel', 'Torres', TRUE, NOW(), NOW()),
('b2b2b2b2-0005-4005-8005-000000000005', 'Olivia', 'Mercado', TRUE, NOW(), NOW()),

-- Tandang Sora Clinic Providers
('c3c3c3c3-0001-4001-8001-000000000001', 'Carlos', 'Gutierrez', TRUE, NOW(), NOW()),
('c3c3c3c3-0002-4002-8002-000000000002', 'Anna', 'Fernandez', TRUE, NOW(), NOW()),
('c3c3c3c3-0003-4003-8003-000000000003', 'Jose', 'Pascual', TRUE, NOW(), NOW());

-- 1.1. Link Providers to their Specialties using provider_specialties table
-- This requires knowing the specialty_id for each specialty name.
-- We select the specialty_id from public.specialties based on the name.

INSERT INTO public.provider_specialties (provider_id, specialty_id)
VALUES
-- Tondo Clinic Providers
('a1a1a1a1-0001-4001-8001-000000000001', (SELECT id from public.specialties WHERE name = 'Family Planning')),
('a1a1a1a1-0002-4002-8002-000000000002', (SELECT id from public.specialties WHERE name = 'Maternal Health')),
('a1a1a1a1-0003-4003-8003-000000000003', (SELECT id from public.specialties WHERE name = 'Child Health')),
('a1a1a1a1-0004-4004-8004-000000000004', (SELECT id from public.specialties WHERE name = 'Medical')),

-- Cubao Clinic Providers
('b2b2b2b2-0001-4001-8001-000000000001', (SELECT id from public.specialties WHERE name = 'Family Planning')),
('b2b2b2b2-0002-4002-8002-000000000002', (SELECT id from public.specialties WHERE name = 'Maternal Health')),
('b2b2b2b2-0003-4003-8003-000000000003', (SELECT id from public.specialties WHERE name = 'Reproductive Health')),
('b2b2b2b2-0004-4004-8004-000000000004', (SELECT id from public.specialties WHERE name = 'Dental')),
('b2b2b2b2-0005-4005-8005-000000000005', (SELECT id from public.specialties WHERE name = 'Medical')),

-- Tandang Sora Clinic Providers
('c3c3c3c3-0001-4001-8001-000000000001', (SELECT id from public.specialties WHERE name = 'Family Planning')),
('c3c3c3c3-0002-4002-8002-000000000002', (SELECT id from public.specialties WHERE name = 'Maternal Health')),
('c3c3c3c3-0003-4003-8003-000000000003', (SELECT id from public.specialties WHERE name = 'Laboratory'));

-- 2. Link Mock Providers to Clinics (Provider Facilities)
-- Correcting column name from clinic_id to facility_id and removing non-existent updated_at.
INSERT INTO public.provider_facilities (provider_id, facility_id, created_at) VALUES 
-- Tondo Links
('a1a1a1a1-0001-4001-8001-000000000001', '07da576b-b679-4c35-955f-a2e8b6a6dd21', NOW()),
('a1a1a1a1-0002-4002-8002-000000000002', '07da576b-b679-4c35-955f-a2e8b6a6dd21', NOW()),
('a1a1a1a1-0003-4003-8003-000000000003', '07da576b-b679-4c35-955f-a2e8b6a6dd21', NOW()),
('a1a1a1a1-0004-4004-8004-000000000004', '07da576b-b679-4c35-955f-a2e8b6a6dd21', NOW()),
-- Cubao Links
('b2b2b2b2-0001-4001-8001-000000000001', '36184414-d194-4c70-81e3-6f2d50380985', NOW()),
('b2b2b2b2-0002-4002-8002-000000000002', '36184414-d194-4c70-81e3-6f2d50380985', NOW()),
('b2b2b2b2-0003-4003-8003-000000000003', '36184414-d194-4c70-81e3-6f2d50380985', NOW()),
('b2b2b2b2-0004-4004-8004-000000000004', '36184414-d194-4c70-81e3-6f2d50380985', NOW()),
('b2b2b2b2-0005-4005-8005-000000000005', '36184414-d194-4c70-81e3-6f2d50380985', NOW()),
-- Tandang Sora Links
('c3c3c3c3-0001-4001-8001-000000000001', 'e33f7836-c4ad-44be-8c11-a860e6cf6452', NOW()),
('c3c3c3c3-0002-4002-8002-000000000002', 'e33f7836-c4ad-44be-8c11-a860e6cf6452', NOW()),
('c3c3c3c3-0003-4003-8003-000000000003', 'e33f7836-c4ad-44be-8c11-a860e6cf6452', NOW());

-- 3. Add Varied Weekly Schedules for Mock Providers
-- NOTE: The table public.provider_weekly_schedules according to 20240821000000_create_provider_schedule_tables.sql migration
-- has columns: id, provider_id, clinic_id, day_of_week, start_time, end_time, is_active, created_at, updated_at
-- The INSERT statement below is using columns: facility_id, schedule_type, schedule_data, status, timezone
-- This is a MISMATCH and will fail.
-- It appears this section was intended for an older/different schema or table.
-- For now, I will COMMENT OUT this section to allow the rest of the seeding to proceed.
-- This part needs to be reviewed and rewritten according to the correct schema of 'provider_weekly_schedules'.

/*
INSERT INTO public.provider_weekly_schedules (id, provider_id, facility_id, schedule_type, schedule_data, status, timezone, created_at, updated_at) VALUES
-- Maria Santos (Tondo, Family Planning) - Mon, Wed, Fri AM
(gen_random_uuid(), 'a1a1a1a1-0001-4001-8001-000000000001', '07da576b-b679-4c35-955f-a2e8b6a6dd21', 'weekly', '{ "monday": [{"start_time": "08:00", "end_time": "12:00"}], "wednesday": [{"start_time": "09:00", "end_time": "13:00"}], "friday": [{"start_time": "08:30", "end_time": "12:30"}] }', 'active', 'Etc/UTC', NOW(), NOW()),
-- Juan Dela Cruz (Tondo, Maternal Health) - Tue, Thu Full Day
(gen_random_uuid(), 'a1a1a1a1-0002-4002-8002-000000000002', '07da576b-b679-4c35-955f-a2e8b6a6dd21', 'weekly', '{ "tuesday": [{"start_time": "09:00", "end_time": "17:00"}], "thursday": [{"start_time": "10:00", "end_time": "18:00"}] }', 'active', 'Etc/UTC', NOW(), NOW()),
-- Lina Garcia (Tondo, Child Health) - Mon-Fri PM with break
(gen_random_uuid(), 'a1a1a1a1-0003-4003-8003-000000000003', '07da576b-b679-4c35-955f-a2e8b6a6dd21', 'weekly', '{ "monday": [{"start_time": "13:00", "end_time": "17:00"}], "tuesday": [{"start_time": "13:00", "end_time": "17:00"}], "wednesday": [{"start_time": "13:00", "end_time": "17:00"}], "thursday": [{"start_time": "13:00", "end_time": "17:00"}], "friday": [{"start_time": "13:00", "end_time": "16:00"}] }', 'active', 'Etc/UTC', NOW(), NOW()),
-- Roberto Reyes (Tondo, Medical) - Mon, Tue, Wed Full Day
(gen_random_uuid(), 'a1a1a1a1-0004-4004-8004-000000000004', '07da576b-b679-4c35-955f-a2e8b6a6dd21', 'weekly', '{ "monday": [{"start_time": "09:00", "end_time": "17:00"}], "tuesday": [{"start_time": "09:00", "end_time": "17:00"}], "wednesday": [{"start_time": "09:00", "end_time": "16:00"}] }', 'active', 'Etc/UTC', NOW(), NOW()),

-- Sofia Lim (Cubao, Family Planning) - Mon, Wed 9-5
(gen_random_uuid(), 'b2b2b2b2-0001-4001-8001-000000000001', '36184414-d194-4c70-81e3-6f2d50380985', 'weekly', '{ "monday": [{"start_time": "09:00", "end_time": "17:00"}], "wednesday": [{"start_time": "09:00", "end_time": "17:00"}] }', 'active', 'Etc/UTC', NOW(), NOW()),
-- David Chen (Cubao, Maternal Health) - Tue 10-6, Fri 9-1
(gen_random_uuid(), 'b2b2b2b2-0002-4002-8002-000000000002', '36184414-d194-4c70-81e3-6f2d50380985', 'weekly', '{ "tuesday": [{"start_time": "10:00", "end_time": "18:00"}], "friday": [{"start_time": "09:00", "end_time": "13:00"}] }', 'active', 'Etc/UTC', NOW(), NOW()),
-- Isabelle Tan (Cubao, Reproductive Health) - Mon, Thu, Fri 8-4
(gen_random_uuid(), 'b2b2b2b2-0003-4003-8003-000000000003', '36184414-d194-4c70-81e3-6f2d50380985', 'weekly', '{ "monday": [{"start_time": "08:00", "end_time": "16:00"}], "thursday": [{"start_time": "08:00", "end_time": "16:00"}], "friday": [{"start_time": "08:00", "end_time": "16:00"}] }', 'active', 'Etc/UTC', NOW(), NOW()),
-- Miguel Torres (Cubao, Dental) - Mon-Thu 9-6
(gen_random_uuid(), 'b2b2b2b2-0004-4004-8004-000000000004', '36184414-d194-4c70-81e3-6f2d50380985', 'weekly', '{ "monday": [{"start_time": "09:00", "end_time": "18:00"}], "tuesday": [{"start_time": "09:00", "end_time": "18:00"}], "wednesday": [{"start_time": "09:00", "end_time": "18:00"}], "thursday": [{"start_time": "09:00", "end_time": "18:00"}] }', 'active', 'Etc/UTC', NOW(), NOW()),
-- Olivia Mercado (Cubao, Medical) - Wed, Fri 10-5
(gen_random_uuid(), 'b2b2b2b2-0005-4005-8005-000000000005', '36184414-d194-4c70-81e3-6f2d50380985', 'weekly', '{ "wednesday": [{"start_time": "10:00", "end_time": "17:00"}], "friday": [{"start_time": "10:00", "end_time": "17:00"}] }', 'active', 'Etc/UTC', NOW(), NOW()),

-- Carlos Gutierrez (Tandang Sora, Family Planning) - Mon-Fri 9-12, 1-5 (with break)
(gen_random_uuid(), 'c3c3c3c3-0001-4001-8001-000000000001', 'e33f7836-c4ad-44be-8c11-a860e6cf6452', 'weekly', '{ "monday": [{"start_time": "09:00", "end_time": "12:00"}, {"start_time": "13:00", "end_time": "17:00"}], "tuesday": [{"start_time": "09:00", "end_time": "12:00"}, {"start_time": "13:00", "end_time": "17:00"}], "wednesday": [{"start_time": "09:00", "end_time": "12:00"}, {"start_time": "13:00", "end_time": "17:00"}], "thursday": [{"start_time": "09:00", "end_time": "12:00"}, {"start_time": "13:00", "end_time": "17:00"}], "friday": [{"start_time": "09:00", "end_time": "12:00"}, {"start_time": "13:00", "end_time": "17:00"}] }', 'active', 'Etc/UTC', NOW(), NOW()),
-- Anna Fernandez (Tandang Sora, Maternal Health) - Tue, Wed, Thu 8-3
(gen_random_uuid(), 'c3c3c3c3-0002-4002-8002-000000000002', 'e33f7836-c4ad-44be-8c11-a860e6cf6452', 'weekly', '{ "tuesday": [{"start_time": "08:00", "end_time": "15:00"}], "wednesday": [{"start_time": "08:00", "end_time": "15:00"}], "thursday": [{"start_time": "08:00", "end_time": "15:00"}] }', 'active', 'Etc/UTC', NOW(), NOW()),
-- Jose Pascual (Tandang Sora, Laboratory) - Mon, Fri 10-4
(gen_random_uuid(), 'c3c3c3c3-0003-4003-8003-000000000003', 'e33f7836-c4ad-44be-8c11-a860e6cf6452', 'weekly', '{ "monday": [{"start_time": "10:00", "end_time": "16:00"}], "friday": [{"start_time": "10:00", "end_time": "16:00"}] }', 'active', 'Etc/UTC', NOW(), NOW());
*/
COMMIT; 